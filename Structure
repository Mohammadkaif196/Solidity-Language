// SPDX-License-Identifier: MIT
pragma solidity 0.8.19;

contract demo {
    struct USER{
    uint id;
    string name;
    }
    USER[] public arr;
    uint public counter=1;
    function insert(string memory _name)public{
      uint _id=counter;
      arr.push(USER(_id,_name));
      counter++;
    }
    function read(uint _id)public view returns(uint,string memory){
         for(uint i=0;i<arr.length;i++){
         if(arr[i].id==_id){
         return (arr[i].id,arr[i].name);
         }
         }
         revert("User does not exist");
    }
    function find(uint _id) public view returns (string memory) {
        for (uint i = 0; i < arr.length; i++) {
            if (arr[i].id == _id) {
                return arr[i].name;
            }
        }
       // revert("User does not exist!");
    }

}

